/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UsingTellor,
  UsingTellorInterface,
} from "../../../vendor/tellor/UsingTellor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_tellor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getDataAfter",
    outputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_timestampRetrieved",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getDataBefore",
    outputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_timestampRetrieved",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getIndexForDataAfter",
    outputs: [
      {
        internalType: "bool",
        name: "_found",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getIndexForDataBefore",
    outputs: [
      {
        internalType: "bool",
        name: "_found",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCount",
        type: "uint256",
      },
    ],
    name: "getMultipleValuesBefore",
    outputs: [
      {
        internalType: "bytes[]",
        name: "_values",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "_timestamps",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
    ],
    name: "getNewValueCountbyQueryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getReporterByTimestamp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTimestampbyQueryIdandIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idMappingContract",
    outputs: [
      {
        internalType: "contract IMappingContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "isInDispute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "retrieveData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addy",
        type: "address",
      },
    ],
    name: "setIdMappingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tellor",
    outputs: [
      {
        internalType: "contract ITellor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "valueFor",
    outputs: [
      {
        internalType: "int256",
        name: "_value",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_statusCode",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001da338038062001da38339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b611c79806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a792765f1161008c578063e07c548611610066578063e07c54861461029a578063f66f49c3146102ca578063f78eea83146102fb578063fcd4a5461461032d576100ea565b8063a792765f14610209578063c5958af91461023a578063ce5e11bf1461026a576100ea565b80632af8aae0116100c85780632af8aae01461015a57806344e87f911461017857806364ee3c6d146101a857806377b03e0d146101d9576100ea565b8063193b505b146100ef5780631959ad5b1461010b5780632944908514610129575b600080fd5b6101096004803603810190610104919061115a565b61035e565b005b6101136103fd565b60405161012091906111e6565b60405180910390f35b610143600480360381019061013e919061126d565b610421565b6040516101519291906112d7565b60405180910390f35b6101626104ca565b60405161016f9190611321565b60405180910390f35b610192600480360381019061018d919061126d565b6104f0565b60405161019f919061133c565b60405180910390f35b6101c260048036038101906101bd919061126d565b610597565b6040516101d09291906113e7565b60405180910390f35b6101f360048036038101906101ee9190611417565b6105f1565b6040516102009190611444565b60405180910390f35b610223600480360381019061021e919061126d565b610695565b6040516102319291906113e7565b60405180910390f35b610254600480360381019061024f919061126d565b61074d565b604051610261919061145f565b60405180910390f35b610284600480360381019061027f919061126d565b6107f8565b6040516102919190611444565b60405180910390f35b6102b460048036038101906102af919061126d565b61089f565b6040516102c19190611490565b60405180910390f35b6102e460048036038101906102df919061126d565b610946565b6040516102f29291906112d7565b60405180910390f35b61031560048036038101906103109190611417565b610c37565b604051610324939291906114c4565b60405180910390f35b610347600480360381019061034291906114fb565b610d68565b60405161035592919061172c565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103b957600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632944908585856040518363ffffffff1660e01b815260040161047f929190611772565b6040805180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf91906117dc565b915091509250929050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344e87f9184846040518363ffffffff1660e01b815260040161054e929190611772565b602060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f919061181c565b905092915050565b606060008060006105a88686610946565b91509150816105cf57600060405180602001604052806000815250909350935050506105ea565b6105d986826107f8565b92506105e5868461074d565b935050505b9250929050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377b03e0d836040518263ffffffff1660e01b815260040161064d9190611849565b602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190611864565b9050919050565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a792765f85856040518363ffffffff1660e01b81526004016106f5929190611772565b600060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061073b91906119b7565b90915080925081935050509250929050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c5958af984846040518363ffffffff1660e01b81526004016107aa929190611772565b600060405180830381865afa1580156107c7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107f09190611a26565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf84846040518363ffffffff1660e01b8152600401610856929190611772565b602060405180830381865afa158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108979190611864565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e07c548684846040518363ffffffff1660e01b81526004016108fd929190611772565b602060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190611a84565b905092915050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632944908585856040518363ffffffff1660e01b81526004016109a4929190611772565b6040805180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e491906117dc565b80925081935050508115610a015780806109fd90611ae0565b9150505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377b03e0d866040518263ffffffff1660e01b8152600401610a5d9190611849565b602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e9190611864565b9050818111610ab4576000809250925050610c30565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf87856040518363ffffffff1660e01b8152600401610b12929190611772565b602060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b539190611864565b905084811115610b6857600193505050610c30565b8280610b7390611ae0565b935050828211610b8b57600080935093505050610c30565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf87856040518363ffffffff1660e01b8152600401610be6929190611772565b602060405180830381865afa158015610c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c279190611864565b90506001935050505b9250929050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387a475fd856040518263ffffffff1660e01b8152600401610c979190611849565b602060405180830381865afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611b3d565b93506000610ce5856105f1565b905060008103610d015760008061019493509350935050610d61565b610d1785600183610d129190611b6a565b6107f8565b92506000610d25868561074d565b90506000815103610d43576000806101949450945094505050610d61565b6000610d4e82611080565b9050809550858560c89550955095505050505b9193909250565b606080600080610d83888789610d7e9190611b6a565b610946565b9150915081610e3057600067ffffffffffffffff811115610da757610da661189b565b5b604051908082528060200260200182016040528015610dda57816020015b6060815260200190600190039081610dc55790505b50600067ffffffffffffffff811115610df657610df561189b565b5b604051908082528060200260200182016040528015610e245781602001602082028036833780820191505090505b50935093505050611077565b6000610e3c8989610421565b809250819450505082610eee57600067ffffffffffffffff811115610e6457610e6361189b565b5b604051908082528060200260200182016040528015610e9757816020015b6060815260200190600190039081610e825790505b50600067ffffffffffffffff811115610eb357610eb261189b565b5b604051908082528060200260200182016040528015610ee15781602001602082028036833780820191505090505b5094509450505050611077565b600060018383610efe9190611b6a565b610f089190611b9e565b905086811115610f305760018783610f209190611b6a565b610f2a9190611b9e565b92508690505b60008167ffffffffffffffff811115610f4c57610f4b61189b565b5b604051908082528060200260200182016040528015610f7f57816020015b6060815260200190600190039081610f6a5790505b50905060008267ffffffffffffffff811115610f9e57610f9d61189b565b5b604051908082528060200260200182016040528015610fcc5781602001602082028036833780820191505090505b509050606060005b8481101561106857610ff18e8289610fec9190611b9e565b6107f8565b83828151811061100457611003611bd2565b5b6020026020010181815250506110348e84838151811061102757611026611bd2565b5b602002602001015161074d565b91508184828151811061104a57611049611bd2565b5b6020026020010181905250808061106090611ae0565b915050610fd4565b50828298509850505050505050505b94509492505050565b600080600090505b82518110156110e2578281815181106110a4576110a3611bd2565b5b602001015160f81c60f81b60f81c60ff16610100836110c39190611c01565b6110cd9190611b9e565b915080806110da90611ae0565b915050611088565b50919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611127826110fc565b9050919050565b6111378161111c565b811461114257600080fd5b50565b6000813590506111548161112e565b92915050565b6000602082840312156111705761116f6110f2565b5b600061117e84828501611145565b91505092915050565b6000819050919050565b60006111ac6111a76111a2846110fc565b611187565b6110fc565b9050919050565b60006111be82611191565b9050919050565b60006111d0826111b3565b9050919050565b6111e0816111c5565b82525050565b60006020820190506111fb60008301846111d7565b92915050565b6000819050919050565b61121481611201565b811461121f57600080fd5b50565b6000813590506112318161120b565b92915050565b6000819050919050565b61124a81611237565b811461125557600080fd5b50565b60008135905061126781611241565b92915050565b60008060408385031215611284576112836110f2565b5b600061129285828601611222565b92505060206112a385828601611258565b9150509250929050565b60008115159050919050565b6112c2816112ad565b82525050565b6112d181611237565b82525050565b60006040820190506112ec60008301856112b9565b6112f960208301846112c8565b9392505050565b600061130b826111b3565b9050919050565b61131b81611300565b82525050565b60006020820190506113366000830184611312565b92915050565b600060208201905061135160008301846112b9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611391578082015181840152602081019050611376565b60008484015250505050565b6000601f19601f8301169050919050565b60006113b982611357565b6113c38185611362565b93506113d3818560208601611373565b6113dc8161139d565b840191505092915050565b6000604082019050818103600083015261140181856113ae565b905061141060208301846112c8565b9392505050565b60006020828403121561142d5761142c6110f2565b5b600061143b84828501611222565b91505092915050565b600060208201905061145960008301846112c8565b92915050565b6000602082019050818103600083015261147981846113ae565b905092915050565b61148a8161111c565b82525050565b60006020820190506114a56000830184611481565b92915050565b6000819050919050565b6114be816114ab565b82525050565b60006060820190506114d960008301866114b5565b6114e660208301856112c8565b6114f360408301846112c8565b949350505050565b60008060008060808587031215611515576115146110f2565b5b600061152387828801611222565b945050602061153487828801611258565b935050604061154587828801611258565b925050606061155687828801611258565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006115aa82611357565b6115b4818561158e565b93506115c4818560208601611373565b6115cd8161139d565b840191505092915050565b60006115e4838361159f565b905092915050565b6000602082019050919050565b600061160482611562565b61160e818561156d565b9350836020820285016116208561157e565b8060005b8581101561165c578484038952815161163d85826115d8565b9450611648836115ec565b925060208a01995050600181019050611624565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116a381611237565b82525050565b60006116b5838361169a565b60208301905092915050565b6000602082019050919050565b60006116d98261166e565b6116e38185611679565b93506116ee8361168a565b8060005b8381101561171f57815161170688826116a9565b9750611711836116c1565b9250506001810190506116f2565b5085935050505092915050565b6000604082019050818103600083015261174681856115f9565b9050818103602083015261175a81846116ce565b90509392505050565b61176c81611201565b82525050565b60006040820190506117876000830185611763565b61179460208301846112c8565b9392505050565b6117a4816112ad565b81146117af57600080fd5b50565b6000815190506117c18161179b565b92915050565b6000815190506117d681611241565b92915050565b600080604083850312156117f3576117f26110f2565b5b6000611801858286016117b2565b9250506020611812858286016117c7565b9150509250929050565b600060208284031215611832576118316110f2565b5b6000611840848285016117b2565b91505092915050565b600060208201905061185e6000830184611763565b92915050565b60006020828403121561187a576118796110f2565b5b6000611888848285016117c7565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118d38261139d565b810181811067ffffffffffffffff821117156118f2576118f161189b565b5b80604052505050565b60006119056110e8565b905061191182826118ca565b919050565b600067ffffffffffffffff8211156119315761193061189b565b5b61193a8261139d565b9050602081019050919050565b600061195a61195584611916565b6118fb565b90508281526020810184848401111561197657611975611896565b5b611981848285611373565b509392505050565b600082601f83011261199e5761199d611891565b5b81516119ae848260208601611947565b91505092915050565b6000806000606084860312156119d0576119cf6110f2565b5b60006119de868287016117b2565b935050602084015167ffffffffffffffff8111156119ff576119fe6110f7565b5b611a0b86828701611989565b9250506040611a1c868287016117c7565b9150509250925092565b600060208284031215611a3c57611a3b6110f2565b5b600082015167ffffffffffffffff811115611a5a57611a596110f7565b5b611a6684828501611989565b91505092915050565b600081519050611a7e8161112e565b92915050565b600060208284031215611a9a57611a996110f2565b5b6000611aa884828501611a6f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611aeb82611237565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b1d57611b1c611ab1565b5b600182019050919050565b600081519050611b378161120b565b92915050565b600060208284031215611b5357611b526110f2565b5b6000611b6184828501611b28565b91505092915050565b6000611b7582611237565b9150611b8083611237565b9250828203905081811115611b9857611b97611ab1565b5b92915050565b6000611ba982611237565b9150611bb483611237565b9250828201905080821115611bcc57611bcb611ab1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c0c82611237565b9150611c1783611237565b9250828202611c2581611237565b91508282048414831517611c3c57611c3b611ab1565b5b509291505056fea264697066735822122036511e2ab109e0052a185f4370a9566f267acbba073cc96aae9107043bf260c864736f6c63430008110033";

type UsingTellorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsingTellorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsingTellor__factory extends ContractFactory {
  constructor(...args: UsingTellorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tellor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UsingTellor> {
    return super.deploy(_tellor, overrides || {}) as Promise<UsingTellor>;
  }
  override getDeployTransaction(
    _tellor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tellor, overrides || {});
  }
  override attach(address: string): UsingTellor {
    return super.attach(address) as UsingTellor;
  }
  override connect(signer: Signer): UsingTellor__factory {
    return super.connect(signer) as UsingTellor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsingTellorInterface {
    return new utils.Interface(_abi) as UsingTellorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsingTellor {
    return new Contract(address, _abi, signerOrProvider) as UsingTellor;
  }
}
