/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BenchUsingTellor,
  BenchUsingTellorInterface,
} from "../../../../vendor/tellor/mocks/BenchUsingTellor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_tellor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getDataAfter",
    outputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_timestampRetrieved",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getDataBefore",
    outputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_timestampRetrieved",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getIndexForDataAfter",
    outputs: [
      {
        internalType: "bool",
        name: "_found",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getIndexForDataBefore",
    outputs: [
      {
        internalType: "bool",
        name: "_found",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCount",
        type: "uint256",
      },
    ],
    name: "getMultipleValuesBefore",
    outputs: [
      {
        internalType: "bytes[]",
        name: "_values",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "_timestamps",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
    ],
    name: "getNewValueCountbyQueryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "getReporterByTimestamp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTimestampbyQueryIdandIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idMappingContract",
    outputs: [
      {
        internalType: "contract IMappingContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "isInDispute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_queryId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "retrieveData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addy",
        type: "address",
      },
    ],
    name: "setIdMappingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_b",
        type: "bytes",
      },
    ],
    name: "sliceUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tellor",
    outputs: [
      {
        internalType: "contract ITellor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "valueFor",
    outputs: [
      {
        internalType: "int256",
        name: "_value",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_statusCode",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eba38038062001eba8339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b611d8e806200012c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806377b03e0d11610097578063e07c548611610066578063e07c5486146102d5578063f66f49c314610305578063f78eea8314610336578063fcd4a54614610368576100f5565b806377b03e0d14610214578063a792765f14610244578063c5958af914610275578063ce5e11bf146102a5576100f5565b80632af8aae0116100d35780632af8aae01461016557806344e87f91146101835780634c8a78e8146101b357806364ee3c6d146101e3576100f5565b8063193b505b146100fa5780631959ad5b146101165780632944908514610134575b600080fd5b610114600480360381019061010f91906111a7565b610399565b005b61011e610438565b60405161012b9190611233565b60405180910390f35b61014e600480360381019061014991906112ba565b61045c565b60405161015c929190611324565b60405180910390f35b61016d610505565b60405161017a919061136e565b60405180910390f35b61019d600480360381019061019891906112ba565b61052b565b6040516101aa9190611389565b60405180910390f35b6101cd60048036038101906101c891906114ea565b6105d2565b6040516101da9190611533565b60405180910390f35b6101fd60048036038101906101f891906112ba565b6105e4565b60405161020b9291906115cd565b60405180910390f35b61022e600480360381019061022991906115fd565b61063e565b60405161023b9190611533565b60405180910390f35b61025e600480360381019061025991906112ba565b6106e2565b60405161026c9291906115cd565b60405180910390f35b61028f600480360381019061028a91906112ba565b61079a565b60405161029c919061162a565b60405180910390f35b6102bf60048036038101906102ba91906112ba565b610845565b6040516102cc9190611533565b60405180910390f35b6102ef60048036038101906102ea91906112ba565b6108ec565b6040516102fc919061165b565b60405180910390f35b61031f600480360381019061031a91906112ba565b610993565b60405161032d929190611324565b60405180910390f35b610350600480360381019061034b91906115fd565b610c84565b60405161035f9392919061168f565b60405180910390f35b610382600480360381019061037d91906116c6565b610db5565b6040516103909291906118f7565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103f457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632944908585856040518363ffffffff1660e01b81526004016104ba92919061193d565b6040805180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa91906119a7565b915091509250929050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344e87f9184846040518363ffffffff1660e01b815260040161058992919061193d565b602060405180830381865afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca91906119e7565b905092915050565b60006105dd826110cd565b9050919050565b606060008060006105f58686610993565b915091508161061c5760006040518060200160405280600081525090935093505050610637565b6106268682610845565b9250610632868461079a565b935050505b9250929050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377b03e0d836040518263ffffffff1660e01b815260040161069a9190611a14565b602060405180830381865afa1580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db9190611a2f565b9050919050565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a792765f85856040518363ffffffff1660e01b815260040161074292919061193d565b600060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107889190611acc565b90915080925081935050509250929050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c5958af984846040518363ffffffff1660e01b81526004016107f792919061193d565b600060405180830381865afa158015610814573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061083d9190611b3b565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf84846040518363ffffffff1660e01b81526004016108a392919061193d565b602060405180830381865afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190611a2f565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e07c548684846040518363ffffffff1660e01b815260040161094a92919061193d565b602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190611b99565b905092915050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632944908585856040518363ffffffff1660e01b81526004016109f192919061193d565b6040805180830381865afa158015610a0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3191906119a7565b80925081935050508115610a4e578080610a4a90611bf5565b9150505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166377b03e0d866040518263ffffffff1660e01b8152600401610aaa9190611a14565b602060405180830381865afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aeb9190611a2f565b9050818111610b01576000809250925050610c7d565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf87856040518363ffffffff1660e01b8152600401610b5f92919061193d565b602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba09190611a2f565b905084811115610bb557600193505050610c7d565b8280610bc090611bf5565b935050828211610bd857600080935093505050610c7d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5e11bf87856040518363ffffffff1660e01b8152600401610c3392919061193d565b602060405180830381865afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190611a2f565b90506001935050505b9250929050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166387a475fd856040518263ffffffff1660e01b8152600401610ce49190611a14565b602060405180830381865afa158015610d01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d259190611c52565b93506000610d328561063e565b905060008103610d4e5760008061019493509350935050610dae565b610d6485600183610d5f9190611c7f565b610845565b92506000610d72868561079a565b90506000815103610d90576000806101949450945094505050610dae565b6000610d9b826110cd565b9050809550858560c89550955095505050505b9193909250565b606080600080610dd0888789610dcb9190611c7f565b610993565b9150915081610e7d57600067ffffffffffffffff811115610df457610df36113bf565b5b604051908082528060200260200182016040528015610e2757816020015b6060815260200190600190039081610e125790505b50600067ffffffffffffffff811115610e4357610e426113bf565b5b604051908082528060200260200182016040528015610e715781602001602082028036833780820191505090505b509350935050506110c4565b6000610e89898961045c565b809250819450505082610f3b57600067ffffffffffffffff811115610eb157610eb06113bf565b5b604051908082528060200260200182016040528015610ee457816020015b6060815260200190600190039081610ecf5790505b50600067ffffffffffffffff811115610f0057610eff6113bf565b5b604051908082528060200260200182016040528015610f2e5781602001602082028036833780820191505090505b50945094505050506110c4565b600060018383610f4b9190611c7f565b610f559190611cb3565b905086811115610f7d5760018783610f6d9190611c7f565b610f779190611cb3565b92508690505b60008167ffffffffffffffff811115610f9957610f986113bf565b5b604051908082528060200260200182016040528015610fcc57816020015b6060815260200190600190039081610fb75790505b50905060008267ffffffffffffffff811115610feb57610fea6113bf565b5b6040519080825280602002602001820160405280156110195781602001602082028036833780820191505090505b509050606060005b848110156110b55761103e8e82896110399190611cb3565b610845565b83828151811061105157611050611ce7565b5b6020026020010181815250506110818e84838151811061107457611073611ce7565b5b602002602001015161079a565b91508184828151811061109757611096611ce7565b5b602002602001018190525080806110ad90611bf5565b915050611021565b50828298509850505050505050505b94509492505050565b600080600090505b825181101561112f578281815181106110f1576110f0611ce7565b5b602001015160f81c60f81b60f81c60ff16610100836111109190611d16565b61111a9190611cb3565b9150808061112790611bf5565b9150506110d5565b50919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061117482611149565b9050919050565b61118481611169565b811461118f57600080fd5b50565b6000813590506111a18161117b565b92915050565b6000602082840312156111bd576111bc61113f565b5b60006111cb84828501611192565b91505092915050565b6000819050919050565b60006111f96111f46111ef84611149565b6111d4565b611149565b9050919050565b600061120b826111de565b9050919050565b600061121d82611200565b9050919050565b61122d81611212565b82525050565b60006020820190506112486000830184611224565b92915050565b6000819050919050565b6112618161124e565b811461126c57600080fd5b50565b60008135905061127e81611258565b92915050565b6000819050919050565b61129781611284565b81146112a257600080fd5b50565b6000813590506112b48161128e565b92915050565b600080604083850312156112d1576112d061113f565b5b60006112df8582860161126f565b92505060206112f0858286016112a5565b9150509250929050565b60008115159050919050565b61130f816112fa565b82525050565b61131e81611284565b82525050565b60006040820190506113396000830185611306565b6113466020830184611315565b9392505050565b600061135882611200565b9050919050565b6113688161134d565b82525050565b6000602082019050611383600083018461135f565b92915050565b600060208201905061139e6000830184611306565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113f7826113ae565b810181811067ffffffffffffffff82111715611416576114156113bf565b5b80604052505050565b6000611429611135565b905061143582826113ee565b919050565b600067ffffffffffffffff821115611455576114546113bf565b5b61145e826113ae565b9050602081019050919050565b82818337600083830152505050565b600061148d6114888461143a565b61141f565b9050828152602081018484840111156114a9576114a86113a9565b5b6114b484828561146b565b509392505050565b600082601f8301126114d1576114d06113a4565b5b81356114e184826020860161147a565b91505092915050565b600060208284031215611500576114ff61113f565b5b600082013567ffffffffffffffff81111561151e5761151d611144565b5b61152a848285016114bc565b91505092915050565b60006020820190506115486000830184611315565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561158857808201518184015260208101905061156d565b60008484015250505050565b600061159f8261154e565b6115a98185611559565b93506115b981856020860161156a565b6115c2816113ae565b840191505092915050565b600060408201905081810360008301526115e78185611594565b90506115f66020830184611315565b9392505050565b6000602082840312156116135761161261113f565b5b60006116218482850161126f565b91505092915050565b600060208201905081810360008301526116448184611594565b905092915050565b61165581611169565b82525050565b6000602082019050611670600083018461164c565b92915050565b6000819050919050565b61168981611676565b82525050565b60006060820190506116a46000830186611680565b6116b16020830185611315565b6116be6040830184611315565b949350505050565b600080600080608085870312156116e0576116df61113f565b5b60006116ee8782880161126f565b94505060206116ff878288016112a5565b9350506040611710878288016112a5565b9250506060611721878288016112a5565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006117758261154e565b61177f8185611759565b935061178f81856020860161156a565b611798816113ae565b840191505092915050565b60006117af838361176a565b905092915050565b6000602082019050919050565b60006117cf8261172d565b6117d98185611738565b9350836020820285016117eb85611749565b8060005b85811015611827578484038952815161180885826117a3565b9450611813836117b7565b925060208a019950506001810190506117ef565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61186e81611284565b82525050565b60006118808383611865565b60208301905092915050565b6000602082019050919050565b60006118a482611839565b6118ae8185611844565b93506118b983611855565b8060005b838110156118ea5781516118d18882611874565b97506118dc8361188c565b9250506001810190506118bd565b5085935050505092915050565b6000604082019050818103600083015261191181856117c4565b905081810360208301526119258184611899565b90509392505050565b6119378161124e565b82525050565b6000604082019050611952600083018561192e565b61195f6020830184611315565b9392505050565b61196f816112fa565b811461197a57600080fd5b50565b60008151905061198c81611966565b92915050565b6000815190506119a18161128e565b92915050565b600080604083850312156119be576119bd61113f565b5b60006119cc8582860161197d565b92505060206119dd85828601611992565b9150509250929050565b6000602082840312156119fd576119fc61113f565b5b6000611a0b8482850161197d565b91505092915050565b6000602082019050611a29600083018461192e565b92915050565b600060208284031215611a4557611a4461113f565b5b6000611a5384828501611992565b91505092915050565b6000611a6f611a6a8461143a565b61141f565b905082815260208101848484011115611a8b57611a8a6113a9565b5b611a9684828561156a565b509392505050565b600082601f830112611ab357611ab26113a4565b5b8151611ac3848260208601611a5c565b91505092915050565b600080600060608486031215611ae557611ae461113f565b5b6000611af38682870161197d565b935050602084015167ffffffffffffffff811115611b1457611b13611144565b5b611b2086828701611a9e565b9250506040611b3186828701611992565b9150509250925092565b600060208284031215611b5157611b5061113f565b5b600082015167ffffffffffffffff811115611b6f57611b6e611144565b5b611b7b84828501611a9e565b91505092915050565b600081519050611b938161117b565b92915050565b600060208284031215611baf57611bae61113f565b5b6000611bbd84828501611b84565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c0082611284565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c3257611c31611bc6565b5b600182019050919050565b600081519050611c4c81611258565b92915050565b600060208284031215611c6857611c6761113f565b5b6000611c7684828501611c3d565b91505092915050565b6000611c8a82611284565b9150611c9583611284565b9250828203905081811115611cad57611cac611bc6565b5b92915050565b6000611cbe82611284565b9150611cc983611284565b9250828201905080821115611ce157611ce0611bc6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611d2182611284565b9150611d2c83611284565b9250828202611d3a81611284565b91508282048414831517611d5157611d50611bc6565b5b509291505056fea26469706673582212206e53bdc301810642275284637a089f387c94b78faa81242cff299a7c5cc8ec7f64736f6c63430008110033";

type BenchUsingTellorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BenchUsingTellorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BenchUsingTellor__factory extends ContractFactory {
  constructor(...args: BenchUsingTellorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tellor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BenchUsingTellor> {
    return super.deploy(_tellor, overrides || {}) as Promise<BenchUsingTellor>;
  }
  override getDeployTransaction(
    _tellor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_tellor, overrides || {});
  }
  override attach(address: string): BenchUsingTellor {
    return super.attach(address) as BenchUsingTellor;
  }
  override connect(signer: Signer): BenchUsingTellor__factory {
    return super.connect(signer) as BenchUsingTellor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BenchUsingTellorInterface {
    return new utils.Interface(_abi) as BenchUsingTellorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BenchUsingTellor {
    return new Contract(address, _abi, signerOrProvider) as BenchUsingTellor;
  }
}
