/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Scribe, ScribeInterface } from "../Scribe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyReporter",
    type: "error",
  },
  {
    inputs: [],
    name: "SubmitValueFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reporter",
        type: "address",
      },
    ],
    name: "addReporter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reporter",
        type: "address",
      },
    ],
    name: "removeReporter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reporters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "string",
        name: "_selector",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061096e806100b76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632cc1cd9e1461005c5780635de5c2121461008c5780636b851b4c146100a85780638da5cb5b146100c4578063dd8755f2146100e2575b600080fd5b6100766004803603810190610071919061052d565b6100fe565b6040516100839190610575565b60405180910390f35b6100a660048036038101906100a1919061052d565b61011e565b005b6100c260048036038101906100bd9190610736565b6101fe565b005b6100cc6103b8565b6040516100d991906107d5565b60405180910390f35b6100fc60048036038101906100f7919061052d565b6103dc565b005b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a3576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151503610288576040517f87567bd900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff168484846040516024016102b592919061082e565b604051602081830303815290604052906040516102d291906108c3565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103349190610921565b6000604051808303816000865af19150503d8060008114610371576040519150601f19603f3d011682016040523d82523d6000602084013e610376565b606091505b50509050806103b1576040517f816a50f200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610461576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104fa826104cf565b9050919050565b61050a816104ef565b811461051557600080fd5b50565b60008135905061052781610501565b92915050565b600060208284031215610543576105426104c5565b5b600061055184828501610518565b91505092915050565b60008115159050919050565b61056f8161055a565b82525050565b600060208201905061058a6000830184610566565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105e38261059a565b810181811067ffffffffffffffff82111715610602576106016105ab565b5b80604052505050565b60006106156104bb565b905061062182826105da565b919050565b600067ffffffffffffffff821115610641576106406105ab565b5b61064a8261059a565b9050602081019050919050565b82818337600083830152505050565b600061067961067484610626565b61060b565b90508281526020810184848401111561069557610694610595565b5b6106a0848285610657565b509392505050565b600082601f8301126106bd576106bc610590565b5b81356106cd848260208601610666565b91505092915050565b600080fd5b600080fd5b60008083601f8401126106f6576106f5610590565b5b8235905067ffffffffffffffff811115610713576107126106d6565b5b60208301915083600182028301111561072f5761072e6106db565b5b9250929050565b600080600080606085870312156107505761074f6104c5565b5b600061075e87828801610518565b945050602085013567ffffffffffffffff81111561077f5761077e6104ca565b5b61078b878288016106a8565b935050604085013567ffffffffffffffff8111156107ac576107ab6104ca565b5b6107b8878288016106e0565b925092505092959194509250565b6107cf816104ef565b82525050565b60006020820190506107ea60008301846107c6565b92915050565b600082825260208201905092915050565b600061080d83856107f0565b935061081a838584610657565b6108238361059a565b840190509392505050565b60006020820190508181036000830152610849818486610801565b90509392505050565b600081519050919050565b600081905092915050565b60005b8381101561088657808201518184015260208101905061086b565b60008484015250505050565b600061089d82610852565b6108a7818561085d565b93506108b7818560208601610868565b80840191505092915050565b60006108cf8284610892565b915081905092915050565b600081519050919050565b600081905092915050565b60006108fb826108da565b61090581856108e5565b9350610915818560208601610868565b80840191505092915050565b600061092d82846108f0565b91508190509291505056fea264697066735822122087ec02e806ca46e6aa44eef7d3980840f63fb51d223e3370df882b4466679c1764736f6c63430008110033";

type ScribeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScribeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Scribe__factory extends ContractFactory {
  constructor(...args: ScribeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Scribe> {
    return super.deploy(overrides || {}) as Promise<Scribe>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Scribe {
    return super.attach(address) as Scribe;
  }
  override connect(signer: Signer): Scribe__factory {
    return super.connect(signer) as Scribe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScribeInterface {
    return new utils.Interface(_abi) as ScribeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Scribe {
    return new Contract(address, _abi, signerOrProvider) as Scribe;
  }
}
