/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Scribe, ScribeInterface } from "../Scribe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SubmitValueFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reporter",
        type: "address",
      },
    ],
    name: "addReporter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reporter",
        type: "address",
      },
    ],
    name: "removeReporter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reporters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "string",
        name: "_selector",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b6e806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632cc1cd9e1461005c5780635de5c2121461008c5780636b851b4c146100a85780638da5cb5b146100c4578063dd8755f2146100e2575b600080fd5b61007660048036038101906100719190610658565b6100fe565b60405161008391906106a0565b60405180910390f35b6100a660048036038101906100a19190610658565b61011e565b005b6100c260048036038101906100bd9190610861565b6101fe565b005b6100cc610385565b6040516100d99190610900565b60405180910390f35b6100fc60048036038101906100f79190610658565b6103a9565b005b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a3576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102088484610488565b61025582828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610524565b60008473ffffffffffffffffffffffffffffffffffffffff16848484604051602401610282929190610959565b6040516020818303038152906040529060405161029f91906109ee565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103019190610a4c565b6000604051808303816000865af19150503d806000811461033e576040519150601f19603f3d011682016040523d82523d6000602084013e610343565b606091505b505090508061037e576040517f816a50f200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042e576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610520828260405160240161049e929190610aad565b6040516020818303038152906040527f759f86bb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105bd565b5050565b6105ba816040516024016105389190610b16565b6040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105bd565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610625826105fa565b9050919050565b6106358161061a565b811461064057600080fd5b50565b6000813590506106528161062c565b92915050565b60006020828403121561066e5761066d6105f0565b5b600061067c84828501610643565b91505092915050565b60008115159050919050565b61069a81610685565b82525050565b60006020820190506106b56000830184610691565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61070e826106c5565b810181811067ffffffffffffffff8211171561072d5761072c6106d6565b5b80604052505050565b60006107406105e6565b905061074c8282610705565b919050565b600067ffffffffffffffff82111561076c5761076b6106d6565b5b610775826106c5565b9050602081019050919050565b82818337600083830152505050565b60006107a461079f84610751565b610736565b9050828152602081018484840111156107c0576107bf6106c0565b5b6107cb848285610782565b509392505050565b600082601f8301126107e8576107e76106bb565b5b81356107f8848260208601610791565b91505092915050565b600080fd5b600080fd5b60008083601f840112610821576108206106bb565b5b8235905067ffffffffffffffff81111561083e5761083d610801565b5b60208301915083600182028301111561085a57610859610806565b5b9250929050565b6000806000806060858703121561087b5761087a6105f0565b5b600061088987828801610643565b945050602085013567ffffffffffffffff8111156108aa576108a96105f5565b5b6108b6878288016107d3565b935050604085013567ffffffffffffffff8111156108d7576108d66105f5565b5b6108e38782880161080b565b925092505092959194509250565b6108fa8161061a565b82525050565b600060208201905061091560008301846108f1565b92915050565b600082825260208201905092915050565b6000610938838561091b565b9350610945838584610782565b61094e836106c5565b840190509392505050565b6000602082019050818103600083015261097481848661092c565b90509392505050565b600081519050919050565b600081905092915050565b60005b838110156109b1578082015181840152602081019050610996565b60008484015250505050565b60006109c88261097d565b6109d28185610988565b93506109e2818560208601610993565b80840191505092915050565b60006109fa82846109bd565b915081905092915050565b600081519050919050565b600081905092915050565b6000610a2682610a05565b610a308185610a10565b9350610a40818560208601610993565b80840191505092915050565b6000610a588284610a1b565b915081905092915050565b600082825260208201905092915050565b6000610a7f8261097d565b610a898185610a63565b9350610a99818560208601610993565b610aa2816106c5565b840191505092915050565b6000604082019050610ac260008301856108f1565b8181036020830152610ad48184610a74565b90509392505050565b6000610ae882610a05565b610af2818561091b565b9350610b02818560208601610993565b610b0b816106c5565b840191505092915050565b60006020820190508181036000830152610b308184610add565b90509291505056fea2646970667358221220051385d6df99fdb9def98c219cb3133c4b096957ae42382e1240ea2c6e2eaf6c64736f6c63430008110033";

type ScribeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScribeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Scribe__factory extends ContractFactory {
  constructor(...args: ScribeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Scribe> {
    return super.deploy(overrides || {}) as Promise<Scribe>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Scribe {
    return super.attach(address) as Scribe;
  }
  override connect(signer: Signer): Scribe__factory {
    return super.connect(signer) as Scribe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScribeInterface {
    return new utils.Interface(_abi) as ScribeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Scribe {
    return new Contract(address, _abi, signerOrProvider) as Scribe;
  }
}
